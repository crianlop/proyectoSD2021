/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectobd;

import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lcsan
 */
public class Ventana_Productos extends javax.swing.JFrame {
    FondoPanel fondo = new FondoPanel();
    Usuario usuario = new Usuario();
    Connection cn;
    /**
     * Creates new form Vista_Productos
     */
    public Ventana_Productos() {
        this.setContentPane(fondo);
        initComponents();
        CargarTabla(TbProductos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbProductos = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnCarrito = new javax.swing.JButton();
        btnCerrarSesion = new javax.swing.JButton();
        lbTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 250));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel1.setText("Nombre:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        TbProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }

        ));
        jScrollPane1.setViewportView(TbProductos);

        btnAgregar.setText("Agregar al Carrito");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnCarrito.setText("Carrito");
        btnCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarritoActionPerformed(evt);
            }
        });

        btnCerrarSesion.setText("Cerrar Sesion");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        lbTitulo.setFont(new java.awt.Font("Tw Cen MT", 2, 48)); // NOI18N
        lbTitulo.setText("Productos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCerrarSesion)
                        .addGap(144, 144, 144)
                        .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(313, 313, 313)
                                .addComponent(btnAgregar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 44, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTitulo)
                    .addComponent(btnCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String Nombre = txtNombre.getText();
        if (Nombre.length() > 0){
            BuscarProducto(TbProductos, Nombre);
        }else{
            JOptionPane.showMessageDialog(null, "Los Campos son Obligatorios");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int filaseleccionada;
        try{
            DefaultTableModel modelo = (DefaultTableModel)TbProductos.getModel();
            filaseleccionada = TbProductos.getSelectedRow();
            if (filaseleccionada == -1){
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila");
            }else{
                int Id = Integer. parseInt(TbProductos.getValueAt(filaseleccionada, 0).toString());
                String Nombre = TbProductos.getValueAt(filaseleccionada, 1).toString();
                int CantidadInv = Integer. parseInt(TbProductos.getValueAt(filaseleccionada, 2).toString());
                int Cantidad = 1;
                float Precio = Float.parseFloat(TbProductos.getValueAt(filaseleccionada, 3).toString());
                //Se Comprueba si hay mas producto
                if((CantidadInv-Cantidad)==0){
                    //Si no hay mas producto se elimina de la tabla MAS NO de la base de datos) 
                    AgregarCarrito(usuario.getUser(),Id,Nombre,Cantidad,Precio);
                    JOptionPane.showMessageDialog(null, "El Articulo ha sido a√±adido con exito");
                    modelo.removeRow(filaseleccionada);
                }else if(CantidadInv==0){
                    JOptionPane.showMessageDialog(null, "El articulo no se encuentra disponible");
                }else{
                    //Caso Contrario se reduce la cantidad en la tabla de inventario
                    AgregarCarrito(usuario.getUser(),Id,Nombre,Cantidad,Precio);
                    String[] datos = new String[4];
                    datos[0] = TbProductos.getValueAt(filaseleccionada, 0).toString();
                    datos[1] = TbProductos.getValueAt(filaseleccionada, 1).toString();
                    datos[2] = String. valueOf(CantidadInv-Cantidad);
                    datos[3] = TbProductos.getValueAt(filaseleccionada, 3).toString();
                    for(int i=0;i<TbProductos.getColumnCount();i++){
                        modelo.setValueAt(datos[i], filaseleccionada, i);
                    }
                    JOptionPane.showMessageDialog(null, "El Articulo ha sido a√±adido con exito");
                }
            }
        }catch (HeadlessException ex){
            JOptionPane.showMessageDialog(null, "Error: "+ex+"\nInt√©ntelo nuevamente", " .::Error En la Operacion::." ,JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarritoActionPerformed
        Ventana_Carrito vp = new Ventana_Carrito();
        vp.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCarritoActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        Ventana_Principal v = new Ventana_Principal();
        v.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbProductos;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCarrito;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel{
        private  Image imagen;
        
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("/imagenes/img_Fondo.jpg")).getImage();
            g.drawImage(imagen,0,0,getWidth(), getHeight(),this);
            setOpaque(false);
            super.paint(g);
        }
    }
    
    public boolean CargarTabla(JTable tabla) {
        DefaultTableModel modelo;
        String[] titulo = {"IdProducto","Nombre","Cantidad","Precio"};
        modelo = new DefaultTableModel(null, titulo);
        Conexion conexion = Conexion.getInstancia();
        
        String[] registros = new String[4];
        try{
            ResultSet rs = conexion.consultar("SELECT * FROM PRODUCTO");
            while (rs.next()) {
                for (int i = 0; i < 4; i++) {
                    registros[i] = rs.getString(i + 1);
                }
                modelo.addRow(registros);
            }
            tabla.setModel(modelo);
            return true;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    
    public void BuscarProducto(JTable tabla, String Nombre) {
        DefaultTableModel modelo;
        String[] titulo = {"IdProducto","Nombre","Cantidad","Precio"};
        modelo = new DefaultTableModel(null, titulo);
        String[] registros = new String[4];
        Conexion conexion = Conexion.getInstancia();
        ResultSet rs;
        
        try{
            String sql = "CALL BUSCAR_PRODUCTO (?)";

            PreparedStatement pst = conexion.getConexion().prepareCall(sql);
            pst.setString(1, Nombre);       
            rs = pst.executeQuery();
            while (rs.next()) {
                for (int i = 0; i < 4; i++) {
                    registros[i] = rs.getString(i + 1);
                }
                modelo.addRow(registros);
            }
            tabla.setModel(modelo);
        }catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    public void AgregarCarrito(String user, int ID, String Nombre, int Cantidad, float Precio) {
        try {
            Conexion conexion = Conexion.getInstancia();
            cn = conexion.getConexion();

            String sql = "CALL AGREGAR_CARRITO (?,?,?,?,?)";

            PreparedStatement pst = cn.prepareCall(sql);
            pst.setString(1, user);
            pst.setInt(2, ID);
            pst.setString(3, Nombre);
            pst.setInt(4, Cantidad);
            pst.setFloat(5, Precio);

            pst.executeUpdate();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
}
